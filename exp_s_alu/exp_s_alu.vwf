/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 4000.0;
	SIMULATION_TIME = 4000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("a[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("b[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("c")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("c[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "c";
}

SIGNAL("c[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "c";
}

SIGNAL("c[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "c";
}

SIGNAL("c[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "c";
}

SIGNAL("c[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "c";
}

SIGNAL("c[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "c";
}

SIGNAL("c[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "c";
}

SIGNAL("c[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "c";
}

SIGNAL("sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sel";
}

SIGNAL("sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sel";
}

SIGNAL("sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sel";
}

SIGNAL("sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sel";
}

TRANSITION_LIST("a[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("a[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("a[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("a[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("a[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("a[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("a[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("a[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("b[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("b[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("b[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("b[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("b[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("b[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("b[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("b[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("c[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 314.072;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1.228;
		LEVEL 1 FOR 98.772;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.063;
		LEVEL 0 FOR 102.024;
		LEVEL 1 FOR 97.976;
		LEVEL 0 FOR 0.408;
		LEVEL 1 FOR 1.616;
		LEVEL 0 FOR 196.461;
		LEVEL Z FOR 600.366;
		LEVEL 0 FOR 1.557;
		LEVEL 1 FOR 0.757;
		LEVEL 0 FOR 298.772;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1.228;
		LEVEL 1 FOR 98.772;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.063;
		LEVEL 0 FOR 102.024;
		LEVEL 1 FOR 97.976;
		LEVEL 0 FOR 0.408;
		LEVEL 1 FOR 1.616;
		LEVEL 0 FOR 196.461;
		LEVEL Z FOR 600.366;
		LEVEL 0 FOR 1.557;
		LEVEL 1 FOR 0.757;
		LEVEL 0 FOR 298.772;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1.228;
		LEVEL 1 FOR 98.772;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.063;
		LEVEL 0 FOR 102.024;
		LEVEL 1 FOR 83.841;
	}
}

TRANSITION_LIST("c[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 312.77;
		LEVEL 1 FOR 99.8;
		LEVEL 0 FOR 0.731;
		LEVEL 1 FOR 99.526;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.474;
		LEVEL 0 FOR 99.469;
		LEVEL 1 FOR 1.405;
		LEVEL 0 FOR 1.296;
		LEVEL 1 FOR 98.704;
		LEVEL 0 FOR 196.807;
		LEVEL Z FOR 600.386;
		LEVEL 0 FOR 301.402;
		LEVEL 1 FOR 99.8;
		LEVEL 0 FOR 0.731;
		LEVEL 1 FOR 99.526;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.474;
		LEVEL 0 FOR 99.469;
		LEVEL 1 FOR 1.405;
		LEVEL 0 FOR 1.296;
		LEVEL 1 FOR 98.704;
		LEVEL 0 FOR 196.807;
		LEVEL Z FOR 600.386;
		LEVEL 0 FOR 301.402;
		LEVEL 1 FOR 99.8;
		LEVEL 0 FOR 0.731;
		LEVEL 1 FOR 99.526;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.474;
		LEVEL 0 FOR 99.469;
		LEVEL 1 FOR 1.405;
		LEVEL 0 FOR 1.296;
		LEVEL 1 FOR 84.529;
	}
}

TRANSITION_LIST("c[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 312.931;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1.458;
		LEVEL 1 FOR 98.542;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.806;
		LEVEL 0 FOR 102.91;
		LEVEL 1 FOR 96.284;
		LEVEL 0 FOR 0.806;
		LEVEL 1 FOR 0.066;
		LEVEL 0 FOR 0.342;
		LEVEL 1 FOR 2.502;
		LEVEL 0 FOR 195.597;
		LEVEL Z FOR 600.366;
		LEVEL 0 FOR 1.535;
		LEVEL 1 FOR 0.244;
		LEVEL 0 FOR 298.542;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1.458;
		LEVEL 1 FOR 98.542;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.806;
		LEVEL 0 FOR 102.91;
		LEVEL 1 FOR 96.284;
		LEVEL 0 FOR 0.806;
		LEVEL 1 FOR 0.066;
		LEVEL 0 FOR 0.342;
		LEVEL 1 FOR 2.502;
		LEVEL 0 FOR 195.597;
		LEVEL Z FOR 600.366;
		LEVEL 0 FOR 1.535;
		LEVEL 1 FOR 0.244;
		LEVEL 0 FOR 298.542;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1.458;
		LEVEL 1 FOR 98.542;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.806;
		LEVEL 0 FOR 102.91;
		LEVEL 1 FOR 83.353;
	}
}

TRANSITION_LIST("c[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.237;
		LEVEL 1 FOR 98.008;
		LEVEL 0 FOR 0.531;
		LEVEL 1 FOR 0.202;
		LEVEL 0 FOR 0.531;
		LEVEL 1 FOR 100.728;
		LEVEL 0 FOR 198.008;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.531;
		LEVEL 1 FOR 0.498;
		LEVEL 0 FOR 0.408;
		LEVEL 1 FOR 2.751;
		LEVEL 0 FOR 98.861;
		LEVEL 1 FOR 94.941;
		LEVEL Z FOR 600.366;
		LEVEL 1 FOR 3.081;
		LEVEL 0 FOR 300.555;
		LEVEL 1 FOR 98.008;
		LEVEL 0 FOR 0.531;
		LEVEL 1 FOR 0.202;
		LEVEL 0 FOR 0.531;
		LEVEL 1 FOR 100.728;
		LEVEL 0 FOR 198.008;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.531;
		LEVEL 1 FOR 0.498;
		LEVEL 0 FOR 0.408;
		LEVEL 1 FOR 2.751;
		LEVEL 0 FOR 98.861;
		LEVEL 1 FOR 94.941;
		LEVEL Z FOR 600.366;
		LEVEL 1 FOR 3.081;
		LEVEL 0 FOR 300.555;
		LEVEL 1 FOR 98.008;
		LEVEL 0 FOR 0.531;
		LEVEL 1 FOR 0.202;
		LEVEL 0 FOR 0.531;
		LEVEL 1 FOR 100.728;
		LEVEL 0 FOR 198.008;
		LEVEL 1 FOR 85.755;
	}
}

TRANSITION_LIST("c[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 214.709;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 98.434;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 103.123;
		LEVEL 0 FOR 0.112;
		LEVEL 1 FOR 97.029;
		LEVEL 0 FOR 0.144;
		LEVEL 1 FOR 2.715;
		LEVEL 0 FOR 0.918;
		LEVEL 1 FOR 194.47;
		LEVEL Z FOR 600.366;
		LEVEL 1 FOR 2.089;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 98.434;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 103.123;
		LEVEL 0 FOR 0.112;
		LEVEL 1 FOR 97.029;
		LEVEL 0 FOR 0.144;
		LEVEL 1 FOR 2.715;
		LEVEL 0 FOR 0.918;
		LEVEL 1 FOR 194.47;
		LEVEL Z FOR 600.366;
		LEVEL 1 FOR 2.089;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 98.434;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 103.123;
		LEVEL 0 FOR 0.112;
		LEVEL 1 FOR 83.022;
	}
}

TRANSITION_LIST("c[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 214.032;
		LEVEL 1 FOR 99.469;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.531;
		LEVEL 0 FOR 102.789;
		LEVEL 1 FOR 200.919;
		LEVEL 0 FOR 95.761;
		LEVEL 1 FOR 0.531;
		LEVEL 0 FOR 1.452;
		LEVEL 1 FOR 0.531;
		LEVEL 0 FOR 0.067;
		LEVEL 1 FOR 0.408;
		LEVEL 0 FOR 1.25;
		LEVEL 1 FOR 0.233;
		LEVEL 0 FOR 0.234;
		LEVEL 1 FOR 0.107;
		LEVEL 0 FOR 0.239;
		LEVEL 1 FOR 99.089;
		LEVEL 0 FOR 0.346;
		LEVEL 1 FOR 93.759;
		LEVEL Z FOR 600.386;
		LEVEL 1 FOR 4.66;
		LEVEL 0 FOR 197.239;
		LEVEL 1 FOR 99.469;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.531;
		LEVEL 0 FOR 102.789;
		LEVEL 1 FOR 200.919;
		LEVEL 0 FOR 95.761;
		LEVEL 1 FOR 0.531;
		LEVEL 0 FOR 1.452;
		LEVEL 1 FOR 0.531;
		LEVEL 0 FOR 0.067;
		LEVEL 1 FOR 0.408;
		LEVEL 0 FOR 1.25;
		LEVEL 1 FOR 0.233;
		LEVEL 0 FOR 0.234;
		LEVEL 1 FOR 0.107;
		LEVEL 0 FOR 0.239;
		LEVEL 1 FOR 99.089;
		LEVEL 0 FOR 0.346;
		LEVEL 1 FOR 93.759;
		LEVEL Z FOR 600.386;
		LEVEL 1 FOR 4.66;
		LEVEL 0 FOR 197.239;
		LEVEL 1 FOR 99.469;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.531;
		LEVEL 0 FOR 102.789;
		LEVEL 1 FOR 200.919;
		LEVEL 0 FOR 82.26;
	}
}

TRANSITION_LIST("c[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 215.154;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 98.023;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.566;
		LEVEL 1 FOR 200.299;
		LEVEL 0 FOR 0.109;
		LEVEL 1 FOR 1.601;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 195.414;
		LEVEL Z FOR 600.366;
		LEVEL 1 FOR 2.89;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 98.023;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.566;
		LEVEL 1 FOR 200.299;
		LEVEL 0 FOR 0.109;
		LEVEL 1 FOR 1.601;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 195.414;
		LEVEL Z FOR 600.366;
		LEVEL 1 FOR 2.89;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 98.023;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.566;
		LEVEL 1 FOR 186.257;
	}
}

TRANSITION_LIST("c[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 212.553;
		LEVEL 1 FOR 100.715;
		LEVEL 0 FOR 99.285;
		LEVEL 1 FOR 0.715;
		LEVEL 0 FOR 99.924;
		LEVEL 1 FOR 99.361;
		LEVEL 0 FOR 0.639;
		LEVEL 1 FOR 0.784;
		LEVEL 0 FOR 0.074;
		LEVEL 1 FOR 101.501;
		LEVEL 0 FOR 0.395;
		LEVEL 1 FOR 99.605;
		LEVEL 0 FOR 0.395;
		LEVEL 1 FOR 195.405;
		LEVEL Z FOR 600.386;
		LEVEL 1 FOR 0.816;
		LEVEL 0 FOR 0.639;
		LEVEL 1 FOR 0.076;
		LEVEL 0 FOR 199.285;
		LEVEL 1 FOR 100.715;
		LEVEL 0 FOR 99.285;
		LEVEL 1 FOR 0.715;
		LEVEL 0 FOR 99.924;
		LEVEL 1 FOR 99.361;
		LEVEL 0 FOR 0.639;
		LEVEL 1 FOR 0.784;
		LEVEL 0 FOR 0.074;
		LEVEL 1 FOR 101.501;
		LEVEL 0 FOR 0.395;
		LEVEL 1 FOR 99.605;
		LEVEL 0 FOR 0.395;
		LEVEL 1 FOR 195.405;
		LEVEL Z FOR 600.386;
		LEVEL 1 FOR 0.816;
		LEVEL 0 FOR 0.639;
		LEVEL 1 FOR 0.076;
		LEVEL 0 FOR 199.285;
		LEVEL 1 FOR 100.715;
		LEVEL 0 FOR 99.285;
		LEVEL 1 FOR 0.715;
		LEVEL 0 FOR 99.924;
		LEVEL 1 FOR 99.361;
		LEVEL 0 FOR 0.639;
		LEVEL 1 FOR 0.784;
		LEVEL 0 FOR 0.074;
		LEVEL 1 FOR 101.501;
		LEVEL 0 FOR 0.395;
		LEVEL 1 FOR 84.054;
	}
}

TRANSITION_LIST("sel[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 800.0;
		}
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("sel[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
	}
}

TRANSITION_LIST("sel[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
	}
}

TRANSITION_LIST("sel[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "sel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "a[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "a[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "a[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "a[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "b[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "b[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "b[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "b[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "b[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "b[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "b[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "b[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "c";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "c[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "c[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "c[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "c[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "c[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "c[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "c[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "c[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 23;
}

TIME_BAR
{
	TIME = 20625;
	MASTER = TRUE;
}
;
